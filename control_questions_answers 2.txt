1) В каких ситуациях применяются типы std::pair и std::tuple
Когда нам необходимо объединить элементы разных типов в один элемент, способный их содержать (в случае pair - их два в случае tuple
 их произвольное число)
2) Когда нужен std:: array 
Когда нам нужен массив фиксированной длины
3) Когда нужен std:: vector
Когда нам нужен динамически изменяющийся массив
4) Когда нужен std::deque?
Когда нам нужна реализация структуры данных, с возможностью вставки и удаления элементов только в начало и конец за
 константное время (называется двусторонней очередью)
5)Когда нужен std::list
Когда нам нужен контейнер с константной вставкой и удалением (или реализация структуры данных связный список), с возможностью 
итерации в обе стороны (хранит указатель на следущий узел и предыдущий)
6)Когда нужен std::forward_list
Та же ситуация, что и в 5, только тут узлы не хранят указатели на предыдущие, следовательно итерация возможна 
только в одном направлении
7)Какие есть адаптеры в STL?
Stack, queue, priority_queue
8) Когда используется circular_buffer из boost?
Когда нам нужно получить контейнер, константного размера с возможностью продолжения записи после его заполнения 
по циклу
9)Почему circular_buffer не вошел в стандарт
Потому что для контейнеров стандарта корректно используется итератор, а в circular_buffer невозможно итерироваться из за цикличности
circular_buffer.end может быть меньше, чем begin
10)Какие есть реализации многомерных массивов?
boost::muilty_array, std::valarray
